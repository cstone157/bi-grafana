version: '2.2'

networks:
  business-intelligence-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
## --------------------------------------------- POSTGRES SECTION ---------------------------------------------
  # Database Container (postgres)
  postgres:
    container_name: pg_container
    build: ./postgres
    restart: always
    environment:
      POSTGRES_USER: shoc
      POSTGRES_PASSWORD: JustKeepSwimming
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - business-intelligence-net

  # Container of PGAdmin (web-based admin tool for postgres database)
  pgadmin:
    container_name: pg_admin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: shoc@shoc.us
      PGADMIN_DEFAULT_PASSWORD: JustKeepSwimming
    links:
      - postgres
    ports:
      - "3031:80"
    networks:
      - business-intelligence-net
## ------------------------------------------- END POSTGRES SECTION -------------------------------------------

## ------------------------------------------ LOG-MONITORING SECTION ------------------------------------------
  # Loki container for log aggregation
  loki:
    container_name: loki
    image: grafana/loki:2.3.0
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./loki/config/loki-config.yaml:/etc/loki/loki-config.yaml
      - ./loki/data:/data/loki
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - business-intelligence-net

  # Promtail will take any log file and export it to loki for you,
  #   this one assumes that you used a standard install for the 
  #   docker containers, this works for linux.  Not sure about MAC's
  promtail:
    container_name: promtail
    image: grafana/promtail:2.3.0
    restart: unless-stopped
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail/config/promtail-config.yaml:/etc/promtail/promtail-config.yaml
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - business-intelligence-net
## ---------------------------------------- END LOG-MONITORING SECTION ----------------------------------------

## ----------------------------------------- SYSTEM-MONITORING SECTION ----------------------------------------
  prometheus:
    image: prom/prometheus:v2.37.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - business-intelligence-net
    labels:
      org.label-schema.group: "business-intelligence"

  alertmanager:
    image: prom/alertmanager:v0.24.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - "9093:9093"
    networks:
      - business-intelligence-net
    labels:
      org.label-schema.group: "business-intelligence"

  nodeexporter:
    image: prom/node-exporter:v1.3.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - business-intelligence-net
    labels:
      org.label-schema.group: "business-intelligence"
## --------------------------------------- END SYSTEM-MONITORING SECTION --------------------------------------


  # Container Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    links:
      - postgres
    user: "0"
    volumes:
      - ./grafana/dashboard:/etc/extra-config/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - ./grafana/config.monitoring
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
    networks:
      - business-intelligence-net
    labels:
      org.label-schema.group: "business-intelligence"
