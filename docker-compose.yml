version: '3.3'

networks:
  business-intelligence-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

## --------------------------------------------- DASHBOARD SECTION --------------------------------------------
  # Container Grafana
  grafana:
    image: grafana/grafana
    container_name: bi_grafana
    user: "0"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      #- GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      #- GF_SECURITY_ALLOW_EMBEDDING=true
      #- GF_SECURITY_ADMIN_PASSWORD=shoc
      #- GF_SECURITY_ADMIN_USER=shoc
    restart: unless-stopped
    links:
      - bi_pg
      #- bi_mongo
    ports:
      - 3000:3000
    expose:
      - 3000
    networks:
      - business-intelligence-net
    labels:
      org.label-schema.group: "business-intelligence"

  superset:
    container_name: bi_superset
    #build: ./superset
    image: apache/superset
    environment:
      - SUPERSET_SECRET_KEY=your_secret_key_here
    ports:
      - 3001:8088
    links:
      - bi_pg
      - mongo
    volumes:
      - ./superset/config:/opt/superset
## ------------------------------------------- END DASHBOARD SECTION ------------------------------------------


## --------------------------------------------- POSTGRES SECTION ---------------------------------------------
  # Database Container (postgres)
  bi_pg:
    container_name: bi_pg
    image: postgres:12.10
    restart: always
    environment:
      POSTGRES_USER: shoc
      POSTGRES_PASSWORD: shoc
      POSTGRES_DB: test_db
    ports:
      - 5432:5432
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - business-intelligence-net

  # Container of PGAdmin (web-based admin tool for postgres database)
  bi_pg_admin:
    container_name: bi_pg_admin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: shoc@shoc.us
      PGADMIN_DEFAULT_PASSWORD: shoc@shoc.us
    links:
      - bi_pg
    ports:
      - 3031:80
    networks:
      - business-intelligence-net
## ------------------------------------------- END POSTGRES SECTION -------------------------------------------

## --------------------------------------------- MONGODB SECTION ---------------------------------------------
#  bi_mongo:
#    image: mongo
#    container_name: bi_mongo
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: example
#    ports:
#      - 27017:27017
#    volumes:
#      - ./mongodb/data:/data/db
#    networks:
#      - business-intelligence-net
#      
#  bi_mongo_exp:
#    image: mongo-express
#    container_name: bi_mongo_exp
#    restart: always
#    ports:
#      - 3032:8081
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: example
#      ME_CONFIG_MONGODB_URL: mongodb://root:example@bi_mongo:27017/
#    networks:
#      - business-intelligence-net
#    links:
#      - bi_mongo

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
  
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 3032:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/


## ------------------------------------------- END MONGODB SECTION -------------------------------------------

## --------------------------------------------- NIFI SECTION ---------------------------------------------
      
  # configuration manager for NiFi
  zookeeper:
    hostname: myzookeeper
    container_name: bi_zookeeper
    image: bitnami/zookeeper
    restart: on-failure
    environment:
        - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
        - business-intelligence-net
  # version control for nifi flows
  registry:
      hostname: myregistry
      container_name: bi_nifi_registry
      image: apache/nifi-registry
      restart: on-failure
      ports:
          - 18080:18080
      environment:
          - LOG_LEVEL=INFO
          - NIFI_REGISTRY_DB_DIR=/opt/nifi-registry/nifi-registry-current/database
          - NIFI_REGISTRY_FLOW_PROVIDER=file
          - NIFI_REGISTRY_FLOW_STORAGE_DIR=/opt/nifi-registry/nifi-registry-current/flow_storage
      volumes:
          - ./nifi_registry/database:/opt/nifi-registry/nifi-registry-current/database
          - ./nifi_registry/flow_storage:/opt/nifi-registry/nifi-registry-current/flow_storage
      networks:
          - business-intelligence-net
  # data extraction, transformation and load service
  nifi:
    container_name: bi_nifi
    image: apache/nifi:1.14.0
    restart: on-failure
    ports:
        - 8091:8080
    environment:
        - NIFI_WEB_HTTP_PORT=8080
        - NIFI_CLUSTER_IS_NODE=true
        - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
        - NIFI_ZK_CONNECT_STRING=myzookeeper:2181
        - NIFI_ELECTION_MAX_WAIT=30 sec
        - NIFI_SENSITIVE_PROPS_KEY='12345678901234567890A'
    healthcheck:
        test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:8091/nifi/}"
        interval: "60s"
        timeout: "3s"
        start_period: "5s"
        retries: 5
    volumes:
      #- ./nifi:/opt/nifi/external
      - ./nifi/database_repository:/opt/nifi/nifi-current/database_repository
      - ./nifi/flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - ./nifi/content_repository:/opt/nifi/nifi-current/content_repository
      - ./nifi/provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - ./nifi/state:/opt/nifi/nifi-current/state
      - ./nifi/logs:/opt/nifi/nifi-current/logs
      # uncomment the next line after copying the /conf directory from the container to your local directory to persist NiFi flows
      - ./nifi/conf:/opt/nifi/nifi-current/conf
    networks:
        - business-intelligence-net

## ------------------------------------------- END NIFI SECTION -------------------------------------------
