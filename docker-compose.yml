version: '2.2'

services:
  # Database Container (postgres)
  postgres:
    container_name: pg_container
    build: ./postgres
    restart: always
    environment:
      POSTGRES_USER: shoc
      POSTGRES_PASSWORD: JustKeepSwimming
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data

  # Container of PGAdmin (web-based admin tool for postgres database)
  pgadmin:
    container_name: pg_admin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: shoc@shoc.us
      PGADMIN_DEFAULT_PASSWORD: JustKeepSwimming
    links:
      - postgres
    ports:
      - "3031:80"

  # Loki container for log aggregation
  loki:
    container_name: loki
    image: grafana/loki:2.3.0
    restart: unless-stopped
    ports:
      - "127.0.0.1:3100:3100"
    volumes:
      - ./loki/config/loki-config.yaml:/etc/loki/loki-config.yaml
      - ./loki/data:/data/loki
    command: -config.file=/etc/loki/loki-config.yaml

  # Promtail will take any log file and export it to loki for you,
  #   this one assumes that you used a standard install for the 
  #   docker containers, this works for linux.  Not sure about MAC's
  promtail:
    container_name: promtail
    image: grafana/promtail:2.3.0
    restart: unless-stopped
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail/config/promtail-config.yaml:/etc/promtail/promtail-config.yaml
    command: -config.file=/etc/promtail/promtail-config.yaml

  # Container Grafana
  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - 3000:3000
    links:
      - postgres
    user: "0"
    volumes:
      - ./grafana/dashboard:/etc/extra-config/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - ./grafana/config.monitoring
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
